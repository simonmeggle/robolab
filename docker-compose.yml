version: "3"

services:
  traefik:
    image: "traefik:latest"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--log.filePath=logs/debug.log"
      - "--log.filePath=logs/error.log"
      # Letsencrypt TLSÂ·
      # https://docs.traefik.io/user-guides/docker-compose/acme-http/
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.ehttp.address=:80"
      - "--entryPoints.ehttp.forwardedHeaders.insecure"
      - "--entrypoints.ehttps.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=ehttp"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=${TRAEFIK_ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--serversTransport.insecureSkipVerify=true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.rule=Host(`${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.dashboard.entrypoints=ehttps"
      - "traefik.http.routers.dashboard.tls.certresolver=myresolver"
      - "traefik.http.routers.dashboard.middlewares=dashboard-auth"
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=${TRAEFIK_AUTH}"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
    ports:
      - "80:80"                                                                                                                                                                                                                                                                                                                    
      - "443:443"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./logs/traefik/:/logs"
    networks:
      - web
    restart: unless-stopped

  portainer: 
    container_name: portainer
    image: portainer/portainer-ce
    hostname: portainer
    restart: always
    networks: 
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.service=portainer"
      - "traefik.http.routers.portainer.rule=Host(`${TRAEFIK_PORTAINER_DOMAIN}`)"
      - "traefik.http.routers.portainer.entrypoints=ehttps"
      - "traefik.http.routers.portainer.tls.certresolver=myresolver"    
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./portainer_data:/data"

  oxid6_apache:
    build: container/apache/.
    hostname: ${DOMAIN}
    restart: always
    depends_on:
      - oxid6_mysql
    volumes:
      - ./data/www/:/var/www/html/:cached
    networks: 
      - web
    labels:
      - "traefik.enable=true"
      # middleware
      - "traefik.http.middlewares.mw-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.mw-redirect.redirectscheme.permanent=true"
      # HTTP routing
      - "traefik.http.routers.oxidhttp.middlewares=mw-redirect"
      - "traefik.http.routers.oxidhttp.rule=Host(`${TRAEFIK_OXID_DOMAIN}`)"
      - "traefik.http.routers.oxidhttp.entrypoints=ehttp"
      # HTTPS routing
      - "traefik.http.routers.oxidhttps.rule=Host(`${TRAEFIK_OXID_DOMAIN}`)"
      - "traefik.http.routers.oxidhttps.entrypoints=ehttps"
      - "traefik.http.routers.oxidhttps.tls.certresolver=myresolver"    
      - "traefik.http.routers.oxidhttps.tls=true"
      - "traefik.http.services.oxidhttps.loadbalancer.server.port=443" 
      - "traefik.http.services.oxidhttps.loadbalancer.server.scheme=https"   
    environment:
      DOMAIN: ${TRAEFIK_OXID_DOMAIN}
      APACHE_PORT: ${APACHE_PORT}
      OXID_VERSION: ${OXID_VERSION}
      OXID_DEMODATA: ${OXID_DEMODATA}
      MYSQL_DATABASE: ${OXID_MYSQL_DATABASE}
      MYSQL_USER: ${OXID_MYSQL_USER}
      MYSQL_PASSWORD: ${OXID_MYSQL_PASSWORD}
      
  oxid6_mysql:
    image: mysql:5.7
    hostname: mysql.${TRAEFIK_OXID_DOMAIN}
    restart: always
    volumes:
      - ./data/mysql/:/var/lib/mysql
    networks: 
      - web
    environment:
      MYSQL_DATABASE: ${OXID_MYSQL_DATABASE}
      MYSQL_USER: ${OXID_MYSQL_USER}
      MYSQL_PASSWORD: ${OXID_MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${OXID_MYSQL_ROOT_PASSWORD}

  oxid6_mailhog:
    hostname: mailhog.${DOMAIN}
    image: mailhog/mailhog:latest
    restart: always
    networks: 
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailhog.service=mailhog"
      - "traefik.http.routers.mailhog.rule=Host(`${TRAEFIK_MAILHOG_DOMAIN}`)"
      - "traefik.http.routers.mailhog.entrypoints=ehttps"
      - "traefik.http.routers.mailhog.tls.certresolver=myresolver"    
      - "traefik.http.services.mailhog.loadbalancer.server.port=8025"

# create with: "docker network create web"
networks:
  web:
    external: true
volumes:
  portainer_data:
  data: