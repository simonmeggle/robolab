version: "3"

services:
  traefik:
    image: "traefik:latest"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--log.filePath=logs/debug.log"
        #- "--log.level=ERROR"
      - "--log.filePath=logs/error.log"
      #- "--log.level=WARN"
      #- "--log.filePath=logs/warn.log"
      # Letsencrypt TLSÂ·
      # https://docs.traefik.io/user-guides/docker-compose/acme-http/
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=mail@robotmk.org"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.rule=Host(`${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.dashboard.middlewares=dashboard-auth"
      # - "traefik.http.middlewares.dashboard-auth.basicauth.usersfile=/users/users.u"
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=${TRAEFIK_AUTH}"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
    ports:
      - "80:80"                                                                                                                                                                                                                                                                                                                    
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./logs/traefik/:/logs"
    networks:
      - web
    restart: unless-stopped

  portainer: 
    container_name: portainer
    image: portainer/portainer-ce
    hostname: portainer
    restart: always
    networks: 
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.service=portainer"
      - "traefik.http.routers.portainer.rule=Host(`${TRAEFIK_PORTAINER_DOMAIN}`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer.tls.certresolver=myresolver"    
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./portainer_data:/data"

  # oxid6_apache:
  #   build: container/apache/.
  #   hostname: ${DOMAIN}
  #   restart: always
  #   depends_on:
  #     - oxid6_mysql
  #   volumes:
  #     - ./data/www/:/var/www/html/:cached
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.oxid.service=oxid"
  #     - "traefik.http.routers.oxid.rule=Host(`${TRAEFIK_OXID_DOMAIN}`)"
  #     - "traefik.http.routers.oxid.entrypoints=websecure"
  #     - "traefik.http.services.oxid.loadbalancer.server.port=80"
  #     - "traefik.http.routers.oxid.tls.certresolver=myresolver"          
  #   environment:
  #     DOMAIN: ${DOMAIN}
  #     APACHE_PORT: ${APACHE_PORT}
  #     OXID_VERSION: ${OXID_VERSION}
  #     OXID_DEMODATA: ${OXID_DEMODATA}
  #     MYSQL_DATABASE: ${MYSQL_DATABASE}
  #     MYSQL_USER: ${MYSQL_USER}
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      
  # oxid6_mysql:
  #   image: mysql:5.7
  #   hostname: mysql.${DOMAIN}
  #   restart: always
  #   volumes:
  #     - ./data/mysql/:/var/lib/mysql
  #   environment:
  #     MYSQL_DATABASE: ${MYSQL_DATABASE}
  #     MYSQL_USER: ${MYSQL_USER}
  #     MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}


# create with: docker network create web
networks:
  web:
    external: true
volumes:
  portainer_data:
  data: